name: Build Android APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential \
            zip \
            unzip \
            git \
            openjdk-11-jdk \
            libgl1-mesa-dev \
            libgles2-mesa-dev

          pip install --user cython buildozer

      - name: Set up Android SDK
        run: |
          mkdir -p $HOME/.buildozer/android/platform
          cd $HOME/.buildozer/android/platform
          curl -o tools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip -q tools.zip
          mkdir -p cmdline-tools-temp
          mv cmdline-tools/* cmdline-tools-temp/
          mkdir -p cmdline-tools/latest
          mv cmdline-tools-temp/* cmdline-tools/latest/

          yes | cmdline-tools/latest/bin/sdkmanager --sdk_root=${HOME}/.buildozer/android/platform --licenses
          cmdline-tools/latest/bin/sdkmanager --sdk_root=${HOME}/.buildozer/android/platform \
            "platforms;android-30" \
            "build-tools;30.0.3" \
            "platform-tools"


      - name: Build APK
        run: |
          # Set environment variables so Buildozer can find the SDK and AIDL
          export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/30.0.3:$HOME/.local/bin:$PATH
          echo "ANDROIDSDK=$ANDROID_SDK_ROOT" >> ~/.bashrc
          echo "PATH=$PATH" >> ~/.bashrc
          buildozer android debug



      - name: Zip APK
        run: |
          mkdir -p upload && cp bin/*.apk upload/
          zip -r prepvision_ai_launcher.zip upload/
